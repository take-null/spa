pry(#<RoomChannel>)> params
exit
ChatMessages.all
User.all
Room.all
User.all
Tweet.all
exit
User.all
exit
user = User.find(1)
user2 = User.find(2)
UserRoom.all
Like.all
User.all
user = User.find(14)
user = User.find(15)
user = User.find(16)
t = tweet.user
exit
Relationships.all
User.all
Relationship.all
ENV['EMAIL_ADDRESS']
ActionMailer::Base.mail(
  from: 'bluerose.pandra@gmail.com',
  to: 'bluerose.pandra@gmail.com',
  subject: "テスト"
  body: "送信テスト"
exit
ActionMailer::Base.mail(
  from: 'bluerose.pandra@gmail.com',
  to: 'bluerose.pandra@gmail.com',
  subject: "テスト",
  body: "送信テスト"
).deliver_now
@google_books = GoogleBook.search('Rails')
@google_books[0].title
@google_books[0].last.author
@google_books.last.author
@google_books.last.authors
@google_books.map { |google_book| google_book.title }
@google_books.class
@google_books.last.image
@google_books = GoogleBook.new_from_id('wlNHDwAAQBAJ')
@google_book = GoogleBook.new_from_id('wlNHDwAAQBAJ')
@google_books.last.id
@google_books.last.google_books_api_id
@google_books[0].google_books_api_id
@google_books = GoogleBook.search('Rails')
exit
@google_books = GoogleBook.search('Rails')
@google_books = GoogleBook.search('Python')
@google_books[0].title
@google_books[0].google_books_api_id
@google_book = GoogleBook.new_form_id("uWhmDwAAQBAJ")
@google_book = GoogleBook.new_from_id("uWhmDwAAQBAJ")
@google_book.title
@google_book.save
@google_book = GoogleBook.new_from_id("uWhmDwAAQBAJ")
@google_book.title
@google_book.save
@google_book = GoogleBook.new_from_id("uWhmDwAAQBAJ")
@google_book.title
@google_book.save
@book = Book.last
@book.authors[0].name
@book.authors.size
@book.authors.class
@author = Author.last
@author.name
exit
@google_book = GoogleBook.new_from_id('wlNHDwAAQBAJ')
@google_book.save
@book = Book.last
@book.title
@book.authors[0].name
@book
@book.authors.size
@book.authors
@book.author
@book.authors[0].name
exit
Book.all
BookShelves.all
BookShelf.all
BooksShelf.all
Tweet.all
Book.all
User.all
Book.all
GoogleBook.all
exit
Book.all
book = Book.find(google_books_api_id : "jfApAQAAMAAJ")
book = Book.find(google_books_api_id: "jfApAQAAMAAJ")
book
@book = Book.find_by(google_books_api_id: "jfApAQAAMAAJ")
@book
BooksShelves.all
BooksShelf.all
Tweet.all
BooksShelf.all
exit
Tweet.all
Tweet.find_by(id: 5)
t = Tweet.find_by(id: 5)
t
t.destroy
t = Tweet.find_by(id: 5)
t = Tweet.find_by(id: 6)
t.destroy
Tweet.all
t = Tweet.find_by(user_id: 1)
t
t = Tweet.find_by(user_id: 1)
t
t = Tweet.where(user_id: 1)
BookShelf.all
BooksShelf.all
Book.all
book = Book.all
book
Book.all.each do |book|
  puts [book]
end
Book.find_by(id: 16)
BooksShelf.all
@book = BookShelf.find(id: 14)
@book = BooksShelf.find(id: 14)
@book = BooksShelf.find_by(id: 14)
@book
@book.destroy
@shelf = BooksShelf.include(:book).order("created_at DESC")
@shelf = BooksShelf.includes(:book).order("created_at DESC")
RelationShips.all
Relationship.all
User.all
Tweet.all
BookShelf.all
BooksShelf.all
Relationship.all
exit
ChatMessageComment.all
Room.all
ChatMessageComment.all
ChatMessage.all
exit
rails c
Notification.all
exit
rails c
exit
Notification.all
@notification = Notification.find(id: 1)
@notification = Notification.find(1)
@notification.delete
@notification = Notification.find(2)
@notification.delete
Notification.all
@notification = Notification.find(3)
@notification.delete
Notification.all
exit
Notification.all
rails c
exit
Notification.all
Relationship.all
exit
Notification.all
exit
BooksShelf.all
exit
Like.all
Likes.all
rails db:migrate status
exit
BooksShelf.all
exit
Good.all
BooksShelf.includes(:goods).where.not(user_id: 19)
Good.includes(:booksshelf).where.not(user_id: 19)
Good.includes(:booksshelf).where(user_id: 19)
BooksShelf.includes(:goods).where.(user_id: 19)
Room.all
ChatMessage.all
@user = User.find_by(1)
User.find(1)
User.find_by(1)
User.find_by(id: 1)
@user = User.find_by(id: 1)
@room = @user.room.find_by(id: 4)
@room = @user.rooms.find_by(id: 4)
User.find(1)
@user = User.find(1)
@user.id
exit
BooksShelf.all
exit
BooksShelf.all
User.all
ActiveRecord::Base.connection.tables
Faker::Internet.email
Faker::Artist.name
Faker::Name.first_name
Faker::Lorem.characters(number:20)
Faker::Lorem.characters(number:400)
BooksShelf.find(1)
BooksShelf.find(id: 1)
BooksShelf.find(25)
BooksShelf.al
BooksShelf.all
BooksShelf.find(48)
BooksShelf.find(47)
BooksShelf.find(46)
BooksShelf.find(49)
Faker::Lorem.characters(number:12)
Faker::Book.title
Book.all
Faker::Date.forward(days: 23)
Faker::Internet.password(length: 10)
Faker::Internet.password(min_length: 12, max_length: 12)
Faker::Internet.url
Authors.all
Author.all
Faker::Name.name
User.all
User.find(1)
Faker::Twitter.status(include_photo: true)~
Faker::Twitter.status(include_photo: true)
User.find(1)
Faker::String.random
Faker::Number.between(from: 1, to: 120)
Notification.all
Faker::Internet.domain_name(domain: "example")
Faker::String.random(length: 3..140)
Faker::String.random(length: [0, 6])
Faker::String.random(length: [3, 6])
exit
User.find(1)
exit
ChatMessage.all
GoogleBook.all
Book.all
Author.all
Goods.all
Good.all
BooksShelf.all
Book.find_by(google_books_api_id: "jfApAQAAMAAJ")
BooksShelf.all
Book.all
@book
@books_shelf
@books_shelf.google_books_api_id
params[:google_books_api_id]
book = Book.find_by(google_books_api_id: params[:google_books_api_id])
book = Book.find_by(google_books_api_id: "jfApAQAAMAAJ")
book = Book.find_by(1)
book = Book.find(1)
Book.all
BooksShelf.all
@books_shelf.google_books_api_id
@books_shelf
exit
exit
@book
@books_shelves
@books_shelf
current_api_v1_user
exit
current_user
current_api_v1_user
@book
exit
@book
exit
@book
exit
@book
exit
@book
exit
@book
Book.all
User.all
exit
exit
@book
exit
@book
exit
User.all
exit
User.all
exit
User.all
exit
User.all
exit
