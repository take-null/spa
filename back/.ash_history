ls
rails route
rails -v
rails --tasks
rake -v
ls -a
ls app
cd controllers
cat controllers
ls -a
cd app
cd controllers
ls
cd api
ls
cd v1
ls
vi hello_controller.rb
cd ..
cd
rails route
rails routes
rails destroy controller api::v1::hello
ls -a
cd app
ls
cd controllers
ls -a
cd api
ls -a
cd v1
ls -a
vi .
vi ..
cd ..
rm v1
rm -r v1
rails d model hello
rails g rspec:controller hello
rails g rspec:controller api/v1/hello
rspec 
 rails generate rspec:install
bundle exec rspec
bundle bundle install
bundler install
rails generate rspec:install
bundle exec rspec
rails g rspec:controller hello
bundle exec rspec
exit
rails db:migrate && rails exec rspec
rails db:migrate && rails rspec
rails db:migrate
rails -v
rspec
db:migrate
rails db:migrate
exit
 && rails db:migrate && rspec
 rails db:migrate && rspec
exit
rspec
exit
bundler -v
exit
pwd
tree
pwd
ls -a
exit
bundle install
exit
ls
cd bin
ls
cd
ls
ls -a
exit
rails -v
bundle install
rails g devise:install
bundle exec rails g devise:install
bundle exec rails bin/rails generate devise:install
bundle exec rails g devise:install
bundle exec spring stop
bundle exec rails g devise:install
bin/spring status
bundle install
rails g devise:install
exit
bundle exec rails route
rails route
rails --task
rails --trace
bundle exec rails db:migrate
rails c
rails route
exit
rails c
bundle exec rails g model chat_message
bundle exec rails db:migrate
bundle exec rails db:migrate:status
rails db:rollback
bundle exec rails db:migrate:status
bundle exec rails db:migrate
bundle exec rails db:migrate:status
rails db:rollback
bundle exec rails db:migrate
bundle exec rails g controller chat_messages
rails c
bundle exec rails g model tweet
rails rails db:migrate
bundle exec rails db:migrate
bundle exec rails db:migrate:status
bundle exec rails g controller tweets
rails g controller tweets
rails g controller users
rails c
rails c --sandbox
rails c
rails g rspec:model user
bundle exec rspec spec/models/user_spec.rb
rails db:migrate RAILS_ENV=test
bundle exec rspec spec/models/user_spec.rb
rails c
bundle exec rspec spec/models/user_spec.rb
bundle install
rails g factory_bot :model user
rails g factory_bot:model user
bundle exec rspec spec/models/user_spec.rb
rails g factory_bot:model tweet
bundle exec rspec spec/models/tweet_spec.rb
bundle exec rails db:migrate
bundle exec rails db:testprepare
bundle exec rails db:test:prepare
bundle exec rspec spec/models/tweet_spec.rb
rails c
rails db:migrate:status
Tweets.all
Tweet.all
rails c
bundle exec rake db:test:prepare
bundle exec rake db:migrate RAILS_ENV=test
rails c
rails db:migrate:status
rails db:rollback
rails db:migrate
bundle exec rails db:test:prepare
bundle exec rake db:migrate RAILS_ENV=test
rails c
rails db:rollback
rails db:migrate
rails c
rails db:rollback
rails db:status
rails db:setup:status
rails db:migrate:status
rake routes
rails routes
rails db:rollback
rails db:migrate
rails db:migrate:status
rails c
rails db
rails c
bundle exec rspec spec/models
bundle exec rake db:migrate
bundle exec rake db:test:prepare
bundle exec rspec spec/models
rails g factory_bot:model tweet
bundle exec rspec spec/models
bundle exec rspec spec/models/tweet_spec.rb
bundle exec rspec spec/models/user_spec.rb
bundle exec rspec spec/models
bundle exec rspec spec/user
bundle exec rspec spec/user_spec
bundle exec rspec spec/models/user_spec.rb
bundle exec rspec spec/models/tweet_spec.rb
bundle exec rake db:test:prepare
bundle exec rspec spec/models/tweet_spec.rb
bundle exec rspec spec/models
bundle exec rspec spec/models/tweet_spec.rb
bundle exec rspec spec/models/user_spec.rb
bundle exec rspec spec/models
spring stop
bundle exec rspec spec/
spring stop
bundle exec rspec spec/models
bundle exec rspec
bundle exec rspec spec/models
bundle exec rspec spec/
rails routes
rails db
bundle exec rails routes | grep /tweet
rails route
bundle exec rails routes
bundle exec rails routes | grep /tweet
rails c
rails routes
rails db
rails routes | grep auth
rails routes
rails c
Tweet.create(tweet_content: 'hello')
Tweet.create(tweet_content:'hello')
Tweet.all
rails c
rails db
rails db:seed
docker exec -it spa_back_1 sh
rails dbconsole
rails routes
rails db:seed
rails routes
rails g devise:controllers users
rails routes
cd config
ls -a
cd locales
touch ja.yml
cd
rails routes
rails c
rails routes
bundle exec rails g model like user_id :integer tweet_id :integer
bundle exec rails db:migrate
rails db:rollback
bundle exec rails db:migrate
bundle exec rails db:status
bundle exec rails db:migrate:status
bundle exec rails g controller likes
bundle exec rails g controller api/v1/likes
rails db
rails c
rails routes
rails db
rails g model Room
rails g model UserRoom
rails db:migrate
rails g migration ChatMessage room_id:integer
rails g migration AddRoomIdToChatMessage room_id:integer
rails g migrate add_room_id_chat_message
rails g migration add_room_id_chat_message
rails g migration add_room_id_chat_messages
rails db:migrate
rails g migration AddRoomIdToChatMessages
rails db:migrate
rails g migration AddRoom_idToChatmessages room_id:integer
rails db:migrate
rails db:migrate:status
rails db:migrate
rails db:rollback
rails db:migrate
rails g migration RemoveChatMessagesIndex
rails db:migrate
rails g migration RemoveChatMessagesIndex
rails db:migrate
rails g migration RemoveTweetsIndex
rails db:migrate
rails g controller api::v1::room index show
rails routes
cd views
ls -a
ls 
cd app
ls -a
cd views
mkdir rooms
cd rooms
touch index.html.erb
touch show.html.erb
touch _chat_message.html.erb
rails db:migrate:status
rails c
rake restart
rails c
rails db
rails c
cd app
cd views
mkdir api/v1
mkdir api
cd api
mkdir v1
ls
cd v1
ls
mkdir chat_messages
rails routes
rails db
rails g channel room
cd app
which log
ls -a
cd ..
ls -a
cd log
ls -a
vi development.log
vi .keep
cd
rails g channel room speak
cd app
cd javascript
mkdir channel
cd
rails g channel room speak
rails routes
cd app
cd views
cd api/v1
touch _chat_message.html.erb
mkdir chat_messages
mv _chat_messages.html.erb chat_messages
rails db:migrate
cd app/
cd views
cd api/v1
cd chat_messages
touch create.js.erb
cd ..
cd chat_message
ls
cd chat_messages
touch create.html.erb
docker-compose up
pry(#<RoomChannel>)> params
rails c
pry
pry(RoomChannel)
pry<RoomChannel>
bundle update
bundle install
exit
cd app
cd views
cd api/v1
cd chat_message
cd chat_messages
touch create.js.erb
touch create.html.erb
create.js.erb
touch create.js.erb
touch create.html.erb
touch create.js.erb
touch create.html.erb
yarn sdd jquery
yarn add jquery
cd app
cd views/api/v1
cd chat_message
cd chat_messages
touch create.js.erb
cd
rails db:migrate
cd app/views/api/v1
cd rooms
touch _footer.html.erb
rails routes
cd ..
cd v1
mkdir users
cd users
touch show.html.erb
rails toutes
rails routes
cd ..
cd chat_message
cd chat_messages
touch show.html.erb
rails routes
cd ..
cd views
mkdir rooms
cd rooms
touch index.html.erb
touch show.html.erb
rails routes
cd ..
cd chat_message
cd chat_messages
touch create.js.erb
touch create.html.erb
touch create.js.erb
touch create.html.erb
rails routes
cd
rails g migration rename_chat_message_content_column_to_chat_messages
rails db:migrate
rails g migration rename_room_name_column_to_room
rails db:migrate
rails g migration rename_room_name_column_to_rooms
rails db:migrate
rails g devise:views
cd app 
cd layouts
cd views
cd layouts
touch application.html.erb
rails c
exit
rails c
rails db
user = User.find(1)
rails c
rails routes
rails c
rails routes
rails routes | grep devise_token_auth
rails routes | grep /auth
rails routes
npm install crypto-js
exit
rails g migration change_data_age_to_users
rails db:migrate
rails routes
rails c
rails routes
rails routes | grep tweets
rails routes
rails generate model Relationship follower_id:integer followed_id:integer
rails db:migrate
rails routes
cd controllers/api/v1
cd controllers
ls
cd app
cd controllers
cd pai/v1
ls
cd api
cd v1
ls
cd
rails g controller Relationships
rails routes
rails c
rails routes
rails c
rails routes
rails generate devise_token_auth:install_views
bundle install
touch .env
rails c
rails g uploader image
exit
rails g model book
rails g model author
rails db migrate
rails db status
rails db:migrate
rails db
ls -a
cd bin
ls -a
cd ..
which ruby
cd /usr/local/bin/ruby
cd /usr/local/bin/
ls -a
vi ruby
cd .
cd
rails g model google_book
rails g controller books
rails routes
exit
rails db:migrate
@google_books = GoogleBook.search('Rails')
rails c
rails g migraton ChangeDataImageAndDescriptionAndInfoToBooks
rails g migration ChangeDataImageAndDescriptionAndInfoToBooks
rails db:migrate
rails g migration ChangeDataImageAndDescriptionAndInfoToBooks
rails g migration ChangeDataImageAndDescriptionAndInfoToBooks2
rails db:migrate
rails g migration RemoveColumnDescriptionAndInfoToBooks
rails db:migrate
rails c
rails routes
rails db
rails c
rails routes
rails g model books_shelf
rails db:migrate
rails g api_v1_controller book_shelvs
rails g api_v1_controller books_shelves
rails g controller books_shelves
rails routes
rails db:migrate
rails routes
rails c
rails g migration AddColumnGoogleBooksApiIdToBooksShelves
rails db:migrate
rails c
rails routes
rails c
exit
rails c
rails routes
